# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bili.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import asyncio
import requests
import json
from PyQt5 import QtCore, QtGui, QtWidgets
import threading
import os
from you_get.common import *
from you_get.extractors.bilibili import *
import hashlib
#添加tqdm后打包文件增大了一倍
def download(url):
    #site = Bilibili()
    #download = site.download_by_url
    #download_playlist = site.download_playlist_by_url
    #bilibili_download = download
    print(url)
    a = Bilibili()
    download = a.download_by_url
    download_playlist = a.download_playlist_by_url
    print("开始下载了")
    try:
        a.download_by_url(url,COOKIES_FILE='cookies.sqlite',output_dir='video/%s'%(name),merge='y')
    except Exception as e:
        print(e)


async def run_in_executor(sync_func, *params):
    loop = asyncio.get_running_loop()
    return await loop.run_in_executor(None, sync_func, *params)


async def async_main(playlist):

    tasks = [run_in_executor(download, url) for url in playlist]

    for future in asyncio.as_completed(tasks):
        await future



class NewDialog(QtWidgets.QDialog):
    def closeEvent(self, event):
        SI.bidWindow.mainWindow.show()
#按UID下载界面
class Ui_Dialog(NewDialog):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.setEnabled(True)
        Dialog.resize(810, 774)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        Dialog.setMinimumSize(QtCore.QSize(810, 774))
        Dialog.setMaximumSize(QtCore.QSize(810, 774))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        Dialog.setFont(font)
        self.frame_3 = QtWidgets.QFrame(Dialog)
        self.frame_3.setGeometry(QtCore.QRect(10, 50, 791, 61))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.frame_3)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(210, 10, 571, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pre_search = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pre_search.setFont(font)
        self.pre_search.setAutoDefault(True)
        self.pre_search.setDefault(False)
        self.pre_search.setFlat(False)
        self.pre_search.setObjectName("pre_search")
        self.pre_search.clicked.connect(self.pr_search)
        self.horizontalLayout_2.addWidget(self.pre_search)
        self.next_search = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.next_search.setMaximumSize(QtCore.QSize(381, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.next_search.setFont(font)
        self.next_search.setAutoDefault(True)
        self.next_search.setObjectName("next_search")
        self.next_search.clicked.connect(self.n_search)
        self.horizontalLayout_2.addWidget(self.next_search)
        self.cur_page = QtWidgets.QSpinBox(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cur_page.sizePolicy().hasHeightForWidth())
        self.cur_page.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.cur_page.setFont(font)
        self.cur_page.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.cur_page.setAlignment(QtCore.Qt.AlignCenter)
        self.cur_page.setMinimum(1)
        self.cur_page.setMaximum(1)
        self.cur_page.setProperty("value", 1)
        self.cur_page.setObjectName("cur_page")
        self.horizontalLayout_2.addWidget(self.cur_page)
        self.jump_search = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.jump_search.setFont(font)
        self.jump_search.setObjectName("jump_search")
        self.jump_search.clicked.connect(self.search)
        self.horizontalLayout_2.addWidget(self.jump_search)
        self.type_name = QtWidgets.QLabel(self.frame_3)
        self.type_name.setGeometry(QtCore.QRect(10, 10, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft PhagsPa")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.type_name.setFont(font)
        self.type_name.setStyleSheet("")
        self.type_name.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.type_name.setFrameShadow(QtWidgets.QFrame.Plain)
        self.type_name.setScaledContents(False)
        self.type_name.setAlignment(QtCore.Qt.AlignCenter)
        self.type_name.setWordWrap(False)
        self.type_name.setIndent(-1)
        self.type_name.setObjectName("type_name")
        self.tid_name = QtWidgets.QComboBox(self.frame_3)
        self.tid_name.setGeometry(QtCore.QRect(100, 20, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.tid_name.setFont(font)
        self.tid_name.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tid_name.setAutoFillBackground(False)
        self.tid_name.setStyleSheet("color: rgb(0, 255, 0);\n"
"color: rgb(255, 1, 5);")
        self.tid_name.setEditable(False)
        self.tid_name.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.tid_name.setObjectName("tid_name")
        self.tid_name.addItem("")
        self.tid_name.activated.connect(self.tid_change)
        self.up_count = QtWidgets.QLabel(Dialog)
        self.up_count.setGeometry(QtCore.QRect(310, 10, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft PhagsPa")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.up_count.setFont(font)
        self.up_count.setStyleSheet("")
        self.up_count.setScaledContents(False)
        self.up_count.setAlignment(QtCore.Qt.AlignCenter)
        self.up_count.setWordWrap(False)
        self.up_count.setIndent(-1)
        self.up_count.setObjectName("up_count")
        self.upcount = QtWidgets.QLineEdit(Dialog)
        self.upcount.setGeometry(QtCore.QRect(420, 10, 121, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.upcount.sizePolicy().hasHeightForWidth())
        self.upcount.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.upcount.setFont(font)
        self.upcount.setFocusPolicy(QtCore.Qt.NoFocus)
        self.upcount.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.upcount.setAlignment(QtCore.Qt.AlignCenter)
        self.upcount.setObjectName("upcount")
        self.uidtext = QtWidgets.QLabel(Dialog)
        self.uidtext.setGeometry(QtCore.QRect(10, 10, 121, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.uidtext.sizePolicy().hasHeightForWidth())
        self.uidtext.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.uidtext.setFont(font)
        self.uidtext.setAlignment(QtCore.Qt.AlignCenter)
        self.uidtext.setObjectName("uidtext")
        self.uid = QtWidgets.QLineEdit(Dialog)
        self.uid.setGeometry(QtCore.QRect(140, 10, 129, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.uid.sizePolicy().hasHeightForWidth())
        self.uid.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.uid.setFont(font)
        self.uid.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.uid.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.uid.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.uid.setInputMask("")
        self.uid.setText("")
        self.uid.setAlignment(QtCore.Qt.AlignCenter)
        self.uid.setClearButtonEnabled(False)
        self.uid.setObjectName("uid")
        self.uid.returnPressed.connect(self.search)
        self.p_count = QtWidgets.QLabel(Dialog)
        self.p_count.setGeometry(QtCore.QRect(570, 10, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft PhagsPa")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        font.setKerning(True)
        self.p_count.setFont(font)
        self.p_count.setStyleSheet("")
        self.p_count.setScaledContents(False)
        self.p_count.setAlignment(QtCore.Qt.AlignCenter)
        self.p_count.setWordWrap(False)
        self.p_count.setIndent(-1)
        self.p_count.setObjectName("p_count")
        self.pcount = QtWidgets.QLineEdit(Dialog)
        self.pcount.setGeometry(QtCore.QRect(660, 10, 111, 31))
        self.pcount.setText(str(0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pcount.setFont(font)
        self.pcount.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pcount.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.pcount.setAlignment(QtCore.Qt.AlignCenter)
        self.pcount.setObjectName("pcount")
        self.frame_2 = QtWidgets.QFrame(Dialog)
        self.frame_2.setGeometry(QtCore.QRect(10, 159, 791, 591))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.vlist = QtWidgets.QTableView(self.frame_2)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.vlist.setFont(font)
        self.vlist.setStyleSheet("background-color: rgb(144, 255, 179);")
        self.vlist.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.vlist.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.vlist.setObjectName("vlist")
        self.vlist.doubleClicked.connect(self.vlist_change)
        self.model = QtGui.QStandardItemModel(0,2)
        self.model.setHorizontalHeaderLabels(['AV号','BV号','视频标题'])
        self.vlist.setModel(self.model)
        self.horizontalLayout_3.addWidget(self.vlist)
        self.dlist = QtWidgets.QTableView(self.frame_2)
        self.dlist.setMaximumSize(QtCore.QSize(810, 774))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.dlist.setFont(font)
        self.dlist.setStyleSheet("background-color: rgb(144, 255, 179);")
        self.dlist.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.dlist.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.dlist.setObjectName("dlist")
        self.dlist.doubleClicked.connect(self.dlist_change)
        self.dmodel = QtGui.QStandardItemModel(0,2)
        self.dmodel.setHorizontalHeaderLabels(['AV号','BV号','视频标题'])
        self.dlist.setModel(self.dmodel)
        self.horizontalLayout_3.addWidget(self.dlist)
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(10, 110, 791, 51))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.search_list = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_list.sizePolicy().hasHeightForWidth())
        self.search_list.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.search_list.setFont(font)
        self.search_list.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.search_list.setObjectName("search_list")
        self.search_list.clicked.connect(self.search)
        self.horizontalLayout.addWidget(self.search_list)
        self.down_list = QtWidgets.QPushButton(self.frame)
        self.down_list.setMaximumSize(QtCore.QSize(381, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.down_list.setFont(font)
        self.down_list.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.down_list.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.down_list.setAutoDefault(True)
        self.down_list.setObjectName("down_list")
        self.down_list.clicked.connect(self.main)
        self.horizontalLayout.addWidget(self.down_list)
        self.tid=''
        self.last_uid=''
        self.tdic={'全部':''}
        self.pagecount=0
        self.playlist=set()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowIcon(QtGui.QIcon("ICO.ico"))
        Dialog.setWindowTitle(_translate("Dialog", "BILIBILI下载"))
        self.pre_search.setText(_translate("Dialog", "上一页"))
        self.next_search.setText(_translate("Dialog", "下一页"))
        self.jump_search.setText(_translate("Dialog", "跳转"))
        self.type_name.setText(_translate("Dialog", "分区类型："))
        self.tid_name.setItemText(0, _translate("Dialog", "全部"))
        self.up_count.setText(_translate("Dialog", "上传总数："))
        self.uidtext.setText(_translate("Dialog", "up的id号:"))
        self.uid.setPlaceholderText(_translate("Dialog", "up主id"))
        self.p_count.setText(_translate("Dialog", "总页数："))
        self.search_list.setText(_translate("Dialog", "查询视频列表"))
        self.down_list.setText(_translate("Dialog", "开始下载"))



    def tid_change(self):
        print("分区改变了")
        self.tid=self.tdic[self.tid_name.currentText()]
        self.cur_page.setValue(1)
        self.search()
    def vlist_change(self,index):
        text=[index.data() for index in self.vlist.selectedIndexes()]
        print(text)
        if text[1] not in self.playlist:
            self.dmodel.appendRow([QtGui.QStandardItem(i) for i in text])
            self.playlist.add(text[1])
            print(self.playlist)
        else:
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '重复添加', '该视频已在下载列表')
            msg_box.exec_()
            print(self.playlist)
    def dlist_change(self,index):
        text=[index.data() for index in self.dlist.selectedIndexes()]
        print(text)
        self.dmodel.removeRow(index.row())
        self.playlist.remove(text[1])
        print(self.playlist)
    def search(self):
        global name
        tmp=self.uid.text()
        if self.last_uid!=tmp:
            self.tid=''
            self.tid_name.setCurrentText('全部')
            self.cur_page.setValue(1)
        search_url="https://api.bilibili.com/x/space/arc/search?mid=%s&pn=%s&ps=20&tid=%s&jsonp=jsonp"%(self.uid.text(),self.cur_page.value(),self.tid)
        info_url="https://api.bilibili.com/x/space/acc/info?mid=%s&jsonp=jsonp"%(self.uid.text())
        try:
            res = requests.get(search_url)
        except Exception:
            print("断网了")
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '断网了', '请检查网络是否连接')
            msg_box.exec_()
            return
        if json.loads(requests.get(info_url).text)['code']!=0:
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '出错了', '请核对uid和分区')
            msg_box.exec_()
            return
        info=json.loads(requests.get(info_url).text)['data']
        if json.loads(res.text)['data']['page']['count']==0:
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '懒啊', '该up未上传过视频')
            msg_box.exec_()
            return
        data=json.loads(res.text)['data']
        name,count,vlist,tlist='['+info['name']+'-'+str(self.uid.text())+']/'+self.tid_name.currentText(),data['page']['count'],data['list']['vlist'],list(data['list']['tlist'].values())
        print(name,count)
        print(tlist)
        if self.last_uid!=tmp:
            self.last_uid=tmp
            self.tid_name.clear()
            self.tid_name.addItem('全部')
            self.tdic={'全部':''}
            for i in tlist:
                self.tdic[i['name']]=str(i['tid'])
                self.tid_name.addItem(i['name'])
        #print(self.tdic)
        self.upcount.setText(str(count))
        pcount=count//20 if count%20==0 else count//20+1
        self.pagecount=pcount
        self.pcount.setText(str(pcount))
        self.cur_page.setMaximum(pcount)
        print("视频总页数是",pcount)
        print(self.model.rowCount())
        self.model.clear()
        self.dmodel.clear()
        self.playlist=set()
        self.model.setHorizontalHeaderLabels(['AV号','BV号','视频标题'])
        self.dmodel.setHorizontalHeaderLabels(['AV号','BV号','视频标题'])
        #print(json.dumps(dir(self.model)))
        for row in range(len(vlist)):
            item = QtGui.QStandardItem("%s"%(vlist[row]['aid']))
            self.model.setItem(row,0,item)
            self.dmodel.setItem(row,0,QtGui.QStandardItem("%s"%(vlist[row]['aid'])))
            item = QtGui.QStandardItem("%s"%(vlist[row]['bvid']))
            self.model.setItem(row,1,item)
            self.dmodel.setItem(row,1,QtGui.QStandardItem("%s"%(vlist[row]['bvid'])))
            item = QtGui.QStandardItem("%s"%(vlist[row]['title']))
            self.model.setItem(row,2,item)
            self.dmodel.setItem(row,2,QtGui.QStandardItem("%s"%(vlist[row]['title'])))
            self.playlist.add(vlist[row]['bvid'])
    def n_search(self):
        if self.cur_page.value()==self.pagecount:
            return
        self.cur_page.setValue(self.cur_page.value()+1)
        print(self.cur_page.value())
        self.search()
    def pr_search(self):
        if self.cur_page.value()==1:
            return 
        print(self.cur_page.value())
        self.cur_page.setValue(self.cur_page.value()-1)
        print(self.cur_page.value())
        self.search()
    def main(self):
        if self.playlist==set():
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '搞事情啊', '下载列表为空')
            msg_box.exec_()
            return
        t=threading.Thread(target=self.main1)
        t.start()
    def main1(self):
        if not os.path.exists('video/%s'%(name)):
            os.makedirs('video/%s'%(name))
        base_url='https://www.bilibili.com/video/'
        playlist=[]
        for i in self.playlist:
            playlist.append(base_url+i)
        print(playlist)
        asyncio.run(async_main(playlist))
        print('下载完成')



#按BV号下载界面
class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        mainWindow.setEnabled(True)
        mainWindow.resize(969, 875)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(mainWindow.sizePolicy().hasHeightForWidth())
        mainWindow.setSizePolicy(sizePolicy)
        mainWindow.setMinimumSize(QtCore.QSize(700, 0))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        mainWindow.setFont(font)
        mainWindow.setFocusPolicy(QtCore.Qt.NoFocus)
        mainWindow.setAcceptDrops(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ICO.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        mainWindow.setWindowOpacity(1.0)
        mainWindow.setToolTipDuration(-1)
        mainWindow.setInputMethodHints(QtCore.Qt.ImhNone)
        mainWindow.setAnimated(True)
        mainWindow.setDocumentMode(False)
        mainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        mainWindow.setDockNestingEnabled(False)
        mainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.mainWindow=mainWindow
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.centralwidget.setFont(font)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.formFrame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.formFrame.sizePolicy().hasHeightForWidth())
        self.formFrame.setSizePolicy(sizePolicy)
        self.formFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.formFrame.setObjectName("formFrame")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.formFrame)
        self.horizontalLayout_4.setContentsMargins(-1, 10, 0, 3)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.bid_text = QtWidgets.QLabel(self.formFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bid_text.sizePolicy().hasHeightForWidth())
        self.bid_text.setSizePolicy(sizePolicy)
        self.bid_text.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.bid_text.setObjectName("bid_text")
        self.horizontalLayout_4.addWidget(self.bid_text)
        self.bid = QtWidgets.QLineEdit(self.formFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bid.sizePolicy().hasHeightForWidth())
        self.bid.setSizePolicy(sizePolicy)
        self.bid.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.bid.setAlignment(QtCore.Qt.AlignCenter)
        self.bid.setObjectName("bid")
        self.bid.returnPressed.connect(self.search)
        self.horizontalLayout_4.addWidget(self.bid)
        self.uid_btn = QtWidgets.QPushButton(self.formFrame)
        self.uid_btn.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"color: rgb(0, 0, 0);")
        self.uid_btn.setObjectName("uid_btn")
        self.uid_btn.clicked.connect(self.uid_down)
        self.horizontalLayout_4.addWidget(self.uid_btn)
        self.formFrame_2 = QtWidgets.QFrame(self.formFrame)
        self.formFrame_2.setObjectName("formFrame_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.formFrame_2)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.cp_count = QtWidgets.QLabel(self.formFrame_2)
        self.cp_count.setObjectName("cp_count")
        self.horizontalLayout_5.addWidget(self.cp_count)
        self.cpcount = QtWidgets.QLineEdit(self.formFrame_2)
        self.cpcount.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cpcount.sizePolicy().hasHeightForWidth())
        self.cpcount.setSizePolicy(sizePolicy)
        self.cpcount.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.cpcount.setAlignment(QtCore.Qt.AlignCenter)
        self.cpcount.setObjectName("cpcount")
        self.horizontalLayout_5.addWidget(self.cpcount)
        self.formFrame_3 = QtWidgets.QFrame(self.formFrame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.formFrame_3.sizePolicy().hasHeightForWidth())
        self.formFrame_3.setSizePolicy(sizePolicy)
        self.formFrame_3.setObjectName("formFrame_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.formFrame_3)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.p_pcount = QtWidgets.QLabel(self.formFrame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.p_pcount.sizePolicy().hasHeightForWidth())
        self.p_pcount.setSizePolicy(sizePolicy)
        self.p_pcount.setObjectName("p_pcount")
        self.horizontalLayout_6.addWidget(self.p_pcount)
        self.ppcount = QtWidgets.QLineEdit(self.formFrame_3)
        self.ppcount.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ppcount.sizePolicy().hasHeightForWidth())
        self.ppcount.setSizePolicy(sizePolicy)
        self.ppcount.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.ppcount.setAlignment(QtCore.Qt.AlignCenter)
        self.ppcount.setObjectName("ppcount")
        self.horizontalLayout_6.addWidget(self.ppcount)
        self.horizontalLayout_6.setStretch(0, 1)
        self.horizontalLayout_6.setStretch(1, 1)
        self.horizontalLayout_5.addWidget(self.formFrame_3)
        self.horizontalLayout_4.addWidget(self.formFrame_2)
        self.horizontalLayout_4.setStretch(0, 1)
        self.horizontalLayout_4.setStretch(1, 6)
        self.horizontalLayout_4.setStretch(2, 1)
        self.horizontalLayout_3.addWidget(self.formFrame)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pre_search = QtWidgets.QPushButton(self.centralwidget)
        self.pre_search.setObjectName("pre_search")
        self.pre_search.clicked.connect(self.pr_search)
        self.horizontalLayout_2.addWidget(self.pre_search)
        self.next_search = QtWidgets.QPushButton(self.centralwidget)
        self.next_search.setObjectName("next_search")
        self.next_search.clicked.connect(self.n_search)
        self.horizontalLayout_2.addWidget(self.next_search)
        self.cur_page = QtWidgets.QSpinBox(self.centralwidget)
        self.cur_page.setStyleSheet("background-color: rgb(85, 255, 0);")
        self.cur_page.setAlignment(QtCore.Qt.AlignCenter)
        self.cur_page.setMinimum(1)
        self.cur_page.setMaximum(1)
        self.cur_page.setSpecialValueText("")
        self.cur_page.setProperty("value", 1)
        self.cur_page.setObjectName("cur_page")
        self.horizontalLayout_2.addWidget(self.cur_page)
        self.jump_search = QtWidgets.QPushButton(self.centralwidget)
        self.jump_search.setObjectName("jump_search")
        self.jump_search.clicked.connect(self.search)
        self.horizontalLayout_2.addWidget(self.jump_search)
        self.horizontalLayout_2.setStretch(0, 2)
        self.horizontalLayout_2.setStretch(1, 2)
        self.horizontalLayout_2.setStretch(2, 1)
        self.horizontalLayout_2.setStretch(3, 2)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.frame_11 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_11.sizePolicy().hasHeightForWidth())
        self.frame_11.setSizePolicy(sizePolicy)
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_11.setObjectName("frame_11")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.frame_11)
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.frame_12 = QtWidgets.QFrame(self.frame_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_12.sizePolicy().hasHeightForWidth())
        self.frame_12.setSizePolicy(sizePolicy)
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout(self.frame_12)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.avid_text = QtWidgets.QLabel(self.frame_12)
        self.avid_text.setObjectName("avid_text")
        self.horizontalLayout_20.addWidget(self.avid_text)
        self.avid = QtWidgets.QLineEdit(self.frame_12)
        self.avid.setReadOnly(True)
        self.avid.setEnabled(True)
        self.avid.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.avid.setAlignment(QtCore.Qt.AlignCenter)
        self.avid.setObjectName("avid")
        self.horizontalLayout_20.addWidget(self.avid)
        self.horizontalLayout_18.addWidget(self.frame_12)
        self.frame_4 = QtWidgets.QFrame(self.frame_11)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.view_text = QtWidgets.QLabel(self.frame_4)
        self.view_text.setObjectName("view_text")
        self.horizontalLayout_11.addWidget(self.view_text)
        self.view = QtWidgets.QLineEdit(self.frame_4)
        self.view.setEnabled(False)
        self.view.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.view.setAlignment(QtCore.Qt.AlignCenter)
        self.view.setObjectName("view")
        self.horizontalLayout_11.addWidget(self.view)
        self.horizontalLayout_18.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.frame_11)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.danmu_text = QtWidgets.QLabel(self.frame_5)
        self.danmu_text.setObjectName("danmu_text")
        self.horizontalLayout_12.addWidget(self.danmu_text)
        self.danmu = QtWidgets.QLineEdit(self.frame_5)
        self.danmu.setEnabled(False)
        self.danmu.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.danmu.setAlignment(QtCore.Qt.AlignCenter)
        self.danmu.setObjectName("danmu")
        self.horizontalLayout_12.addWidget(self.danmu)
        self.horizontalLayout_18.addWidget(self.frame_5)
        self.frame_6 = QtWidgets.QFrame(self.frame_11)
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.frame_6)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.reply_text = QtWidgets.QLabel(self.frame_6)
        self.reply_text.setObjectName("reply_text")
        self.horizontalLayout_13.addWidget(self.reply_text)
        self.reply = QtWidgets.QLineEdit(self.frame_6)
        self.reply.setEnabled(False)
        self.reply.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.reply.setAlignment(QtCore.Qt.AlignCenter)
        self.reply.setObjectName("reply")
        self.horizontalLayout_13.addWidget(self.reply)
        self.horizontalLayout_18.addWidget(self.frame_6)
        self.horizontalLayout_18.setStretch(0, 1)
        self.horizontalLayout_18.setStretch(1, 1)
        self.horizontalLayout_18.setStretch(2, 1)
        self.horizontalLayout_18.setStretch(3, 1)
        self.verticalLayout.addWidget(self.frame_11)
        self.frame_13 = QtWidgets.QFrame(self.centralwidget)
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_13.setObjectName("frame_13")
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout(self.frame_13)
        self.horizontalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.frame_14 = QtWidgets.QFrame(self.frame_13)
        self.frame_14.setEnabled(True)
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout(self.frame_14)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.favorite_text = QtWidgets.QLabel(self.frame_14)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.favorite_text.setFont(font)
        self.favorite_text.setObjectName("favorite_text")
        self.horizontalLayout_22.addWidget(self.favorite_text)
        self.favorite = QtWidgets.QLineEdit(self.frame_14)
        self.favorite.setEnabled(False)
        self.favorite.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.favorite.setAlignment(QtCore.Qt.AlignCenter)
        self.favorite.setObjectName("favorite")
        self.horizontalLayout_22.addWidget(self.favorite)
        self.horizontalLayout_21.addWidget(self.frame_14)
        self.frame_15 = QtWidgets.QFrame(self.frame_13)
        self.frame_15.setEnabled(True)
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout(self.frame_15)
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.share_text = QtWidgets.QLabel(self.frame_15)
        self.share_text.setEnabled(True)
        self.share_text.setObjectName("share_text")
        self.horizontalLayout_23.addWidget(self.share_text)
        self.share = QtWidgets.QLineEdit(self.frame_15)
        self.share.setEnabled(False)
        self.share.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.share.setAlignment(QtCore.Qt.AlignCenter)
        self.share.setObjectName("share")
        self.horizontalLayout_23.addWidget(self.share)
        self.horizontalLayout_21.addWidget(self.frame_15)
        self.frame_16 = QtWidgets.QFrame(self.frame_13)
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout(self.frame_16)
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.like_text = QtWidgets.QLabel(self.frame_16)
        self.like_text.setObjectName("like_text")
        self.horizontalLayout_24.addWidget(self.like_text)
        self.like = QtWidgets.QLineEdit(self.frame_16)
        self.like.setEnabled(False)
        self.like.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.like.setAlignment(QtCore.Qt.AlignCenter)
        self.like.setObjectName("like")
        self.horizontalLayout_24.addWidget(self.like)
        self.horizontalLayout_21.addWidget(self.frame_16)
        self.frame_17 = QtWidgets.QFrame(self.frame_13)
        self.frame_17.setEnabled(True)
        self.frame_17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout(self.frame_17)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.coin_text = QtWidgets.QLabel(self.frame_17)
        self.coin_text.setEnabled(True)
        self.coin_text.setObjectName("coin_text")
        self.horizontalLayout_25.addWidget(self.coin_text)
        self.coin = QtWidgets.QLineEdit(self.frame_17)
        self.coin.setEnabled(False)
        self.coin.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.coin.setAlignment(QtCore.Qt.AlignCenter)
        self.coin.setObjectName("coin")
        self.horizontalLayout_25.addWidget(self.coin)
        self.horizontalLayout_21.addWidget(self.frame_17)
        self.horizontalLayout_21.setStretch(0, 1)
        self.horizontalLayout_21.setStretch(1, 1)
        self.horizontalLayout_21.setStretch(2, 1)
        self.horizontalLayout_21.setStretch(3, 1)
        self.verticalLayout.addWidget(self.frame_13)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setObjectName("frame")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.select_text = QtWidgets.QPushButton(self.frame_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.select_text.setFont(font)
        self.select_text.setStyleSheet("background-color: rgb(0, 170, 255);")
        self.select_text.clicked.connect(self.search)
        self.select_text.setObjectName("select_text")
        self.horizontalLayout_8.addWidget(self.select_text)
        self.horizontalLayout_10.addWidget(self.frame_3)
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.down_text = QtWidgets.QPushButton(self.frame_2)
        self.down_text.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.down_text.setObjectName("down_text")
        self.down_text.clicked.connect(self.main)
        self.horizontalLayout_9.addWidget(self.down_text)
        self.horizontalLayout_10.addWidget(self.frame_2)
        self.horizontalLayout_7.addWidget(self.frame)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.view_list = QtWidgets.QTableView(self.centralwidget)
        self.view_list.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.view_list.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.view_list.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.view_list.setFrameShadow(QtWidgets.QFrame.Plain)
        self.view_list.setObjectName("view_list")
        self.view_list.doubleClicked.connect(self.vlist_change)
        self.view_list.horizontalHeader().setStretchLastSection(True)
        self.vmodel = QtGui.QStandardItemModel(0,2)
        self.vmodel.setHorizontalHeaderLabels(['P数','CID号','分P标题','时长(秒)'])
        self.view_list.setModel(self.vmodel)
        self.horizontalLayout.addWidget(self.view_list)
        self.down_list = QtWidgets.QTableView(self.centralwidget)
        self.down_list.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.down_list.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.down_list.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.down_list.setObjectName("down_list")
        self.down_list.doubleClicked.connect(self.dlist_change)
        self.down_list.horizontalHeader().setStretchLastSection(True)
        self.dmodel = QtGui.QStandardItemModel(0,2)
        self.dmodel.setHorizontalHeaderLabels(['集数','CID号','分P标题','时长(秒)'])
        self.down_list.setModel(self.dmodel)
        self.horizontalLayout.addWidget(self.down_list)
        self.playlist=set()
        self.verticalLayout.addLayout(self.horizontalLayout)
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 969, 26))
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        mainWindow.setMenuBar(self.menubar)
        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "BILIBILI分P视频下载"))
        self.bid_text.setText(_translate("mainWindow", "BV号："))
        self.uid_btn.setText(_translate("mainWindow", "点此UID下载"))
        self.cp_count.setText(_translate("mainWindow", "分P总数："))
        self.p_pcount.setText(_translate("mainWindow", "总页数："))
        self.pre_search.setText(_translate("mainWindow", "上一页"))
        self.next_search.setText(_translate("mainWindow", "下一页"))
        self.jump_search.setText(_translate("mainWindow", "跳转"))
        self.avid_text.setText(_translate("mainWindow", "av号："))
        self.view_text.setText(_translate("mainWindow", "观看："))
        self.danmu_text.setText(_translate("mainWindow", "弹幕："))
        self.reply_text.setText(_translate("mainWindow", "评论："))
        self.favorite_text.setText(_translate("mainWindow", "收藏："))
        self.share_text.setText(_translate("mainWindow", "分享："))
        self.like_text.setText(_translate("mainWindow", "点赞："))
        self.coin_text.setText(_translate("mainWindow", "投币："))
        self.select_text.setText(_translate("mainWindow", "查询"))
        self.down_text.setText(_translate("mainWindow", "下载"))


    def vlist_change(self,index):
        print(self.playlist)
        text=[index.data() for index in self.view_list.selectedIndexes()]
        print(text)
        if (text[0]) not in self.playlist:
            self.dmodel.appendRow([QtGui.QStandardItem(i) for i in text])
            self.playlist.add(str(text[0]))
            print(self.playlist)
        else:
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '重复添加', '该视频已在下载列表')
            msg_box.exec_()
            print(self.playlist)
    def dlist_change(self,index):
        text=[index.data() for index in self.down_list.selectedIndexes()]
        print(type(text),text)
        print("到这儿还没错")
        self.dmodel.removeRow(index.row())
        self.playlist.remove(text[0])
        print(self.playlist)


    def search(self):
        global name
        res = requests.get('http://api.bilibili.com/x/web-interface/view?bvid=%s'% self.bid.text())
        if json.loads(res.text)['code']!=0:
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '出错了', '请核对BV号')
            msg_box.exec_()
            return
        data=json.loads(res.text)['data']
        owner=data['owner']
        name=owner['name']+'-'+str(owner['mid'])+'/%s-%s'%(data['title'],data['bvid'])
        cpcount=data['videos']
        info=data['stat']
        begin=(int(self.cur_page.value())-1)*20
        end=(int(self.cur_page.value()))*20
        vlist=data['pages'][begin:end]
        ppcount=cpcount//20 if cpcount%20==0 else cpcount//20+1
        self.cpcount.setText(str(cpcount))
        self.ppcount.setText(str(ppcount))
        self.avid.setText(str(data['aid']))
        self.view.setText(str(info['view']))
        self.danmu.setText(str(info['danmaku']))
        self.reply.setText(str(info['reply']))
        self.favorite.setText(str(info['favorite']))
        self.share.setText(str(info['share']))
        self.like.setText(str(info['like']))
        self.coin.setText(str(info['coin']))
        self.cur_page.setMaximum(ppcount)
        print(data['videos'])
        self.vmodel.clear()
        self.dmodel.clear()
        self.playlist=set()
        self.vmodel.setHorizontalHeaderLabels(['集数','CID号','分P标题','时长(秒)'])
        self.dmodel.setHorizontalHeaderLabels(['集数','CID号','分P标题','时长(秒)'])
        for row in range(len(vlist)):
            item = QtGui.QStandardItem("%s"%(vlist[row]['page']))
            self.vmodel.setItem(row,0,item)
            self.dmodel.setItem(row,0,QtGui.QStandardItem("%s"%(vlist[row]['page'])))
            item = QtGui.QStandardItem("%s"%(vlist[row]['cid']))
            self.vmodel.setItem(row,1,item)
            self.dmodel.setItem(row,1,QtGui.QStandardItem("%s"%(vlist[row]['cid'])))
            item = QtGui.QStandardItem("%s"%(vlist[row]['part']))
            self.vmodel.setItem(row,2,item)
            self.dmodel.setItem(row,2,QtGui.QStandardItem("%s"%(vlist[row]['part'])))
            item = QtGui.QStandardItem("%s"%(vlist[row]['duration']))
            self.vmodel.setItem(row,3,item)
            self.dmodel.setItem(row,3,QtGui.QStandardItem("%s"%(vlist[row]['duration'])))
            self.playlist.add(str(vlist[row]['page']))
        print(self.playlist)
    def n_search(self):
        if self.cur_page.value()==self.ppcount:
            return
        self.cur_page.setValue(self.cur_page.value()+1)
        print(self.cur_page.value())
        self.search()
    def pr_search(self):
        if self.cur_page.value()==1:
            return 
        print(self.cur_page.value())
        self.cur_page.setValue(self.cur_page.value()-1)
        print(self.cur_page.value())
        self.search()


    def main(self):
        if self.playlist==set():
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '搞事情啊', '下载列表为空')
            msg_box.exec_()
            return
        t=threading.Thread(target=self.main1)
        t.start()
    def main1(self):
        if not os.path.exists('video/%s'%(name)):
            os.makedirs('video/%s'%(name))
        base_url='https://www.bilibili.com/video/%s?p='%(self.bid.text())
        playlist=[]
        for i in self.playlist:
            playlist.append(base_url+i)
        print(playlist)
        asyncio.run(async_main(playlist))
        print('下载完成')

    def uid_down(self):
        self.mainWindow.hide()
        Dialog =NewDialog()
        SI.uidWindow.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()

#所有界面集合：
class SI:
    uidWindow=None
    bidWindow=None
if __name__ == "__main__":
    name=''
    app = QtWidgets.QApplication(sys.argv)
    Dialog =QtWidgets.QMainWindow()
    SI.uidWindow = Ui_Dialog()
    SI.bidWindow=Ui_mainWindow()
    SI.bidWindow.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())